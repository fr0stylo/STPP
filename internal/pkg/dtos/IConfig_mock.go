// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package dtos

import (
	"sync"
)

var (
	lockIConfigMockRead sync.RWMutex
)

// IConfigMock is a mock implementation of IConfig.
//
//     func TestSomethingThatUsesIConfig(t *testing.T) {
//
//         // make and configure a mocked IConfig
//         mockedIConfig := &IConfigMock{
//             ReadFunc: func() Config {
// 	               panic("mock out the Read method")
//             },
//         }
//
//         // use mockedIConfig in code that requires IConfig
//         // and then make assertions.
//
//     }
type IConfigMock struct {
	// ReadFunc mocks the Read method.
	ReadFunc func() Config

	// calls tracks calls to the methods.
	calls struct {
		// Read holds details about calls to the Read method.
		Read []struct {
		}
	}
}

// Read calls ReadFunc.
func (mock *IConfigMock) Read() Config {
	if mock.ReadFunc == nil {
		panic("IConfigMock.ReadFunc: method is nil but IConfig.Read was just called")
	}
	callInfo := struct {
	}{}
	lockIConfigMockRead.Lock()
	mock.calls.Read = append(mock.calls.Read, callInfo)
	lockIConfigMockRead.Unlock()
	return mock.ReadFunc()
}

// ReadCalls gets all the calls that were made to Read.
// Check the length with:
//     len(mockedIConfig.ReadCalls())
func (mock *IConfigMock) ReadCalls() []struct {
} {
	var calls []struct {
	}
	lockIConfigMockRead.RLock()
	calls = mock.calls.Read
	lockIConfigMockRead.RUnlock()
	return calls
}
